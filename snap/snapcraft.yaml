name: edgex-influx-proxy
version: "replace-me"
version-script: |
  echo 0.7.1-$(git rev-parse --short HEAD)
title: EdgeX Foundry InfluxDB Proxy Server
license: GPL-3.0
summary: Proxy data from EdgeX device services to InfluxDB using export-distro
base: core18
description: |
  The EdgeX InfluxDB Proxy server provides a simple HTTP endpoint that is
  registered with the export-distro EdgeX microservice, forwarding all event
  readings to an InfluxDB server.

architectures:
  - build-on: amd64
  - build-on: armhf
  - build-on: arm64
  - build-on: i386

grade: stable
confinement: strict

parts:
  glide:
    plugin: dump
    source:
      - on amd64: https://github.com/Masterminds/glide/releases/download/v0.12.3/glide-v0.12.3-linux-amd64.tar.gz
      - else:
        - on arm64: https://github.com/Masterminds/glide/releases/download/v0.12.3/glide-v0.12.3-linux-arm64.tar.gz
        - else:
          - on armhf: https://github.com/Masterminds/glide/releases/download/v0.12.3/glide-v0.12.3-linux-armv7.tar.gz
          - else:
            - on i386: https://github.com/Masterminds/glide/releases/download/v0.12.3/glide-v0.12.3-linux-386.tar.gz
      - else fail
    prime:
      - -*
    organize:
      glide: bin/glide
    stage:
      - bin/glide

  influxproxy:
    source: .
    after: [glide]
    plugin: go
    go-channel: 1.11/stable
    build-packages: [mercurial, git, build-essential]
    override-pull: |
      # we have to do this currently because the default go plugin does
      # go get -t -d -v ./... which fails because influxdb doesn't have the 
      # needed import path on the master branch which is what the go plugin
      # tries to use
      ROOT_PROJECT_DIR=$(dirname $(dirname $(dirname $SNAPCRAFT_PART_SRC)))
      case $SNAPCRAFT_BUILD_ENVIRONMENT in 
        host)
          # for host build env we don't have a project specific dir
          # so we have to copy everything, filtering out the 
          # snapcraft generated directories
          for dir in $(ls $ROOT_PROJECT_DIR); do
            case $dir in
              parts|prime|stage)
                continue;;
              *)
                cp -r $ROOT_PROJECT_DIR/$dir $SNAPCRAFT_PART_SRC;;
            esac
          done
          ;;
        *)
          # other build environments we will have a project dir that contains
          # only the files from the original project
          cp -r $ROOT_PROJECT_DIR/project/* $SNAPCRAFT_PART_SRC
          ;;
      esac
    override-build: |
      mkdir -p $SNAPCRAFT_PART_INSTALL/bin
      cd $SNAPCRAFT_PART_SRC
      export GOPATH="$(pwd)/../build/.gopath"
      mkdir -p "$GOPATH"
      export PATH="$SNAPCRAFT_STAGE/bin:$GOPATH/bin:$PATH"
      export GOROOT=$(go env GOROOT)
      export GOIMPORTPATH="$GOPATH/src/github.com/anonymouse64/edgex-influx-proxy"
      mkdir -p $GOIMPORTPATH
      cp -r ./* $GOIMPORTPATH
      cd $GOIMPORTPATH
      glide cc
      glide install
      GO111MODULE=off go build -o $SNAPCRAFT_PART_INSTALL/bin/influxproxy ./cmd/influxproxy
  scripts:
    source: scripts
    plugin: dump
    organize:
      '*.sh': bin/
    prime:
      - bin

apps:
  influxproxy:
    command: bin/runserver.sh
    daemon: simple
    restart-condition: always
    plugs:
      - network-bind
      - network
